window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "proyecto-digi-t2.src", "modulename": "proyecto-digi-t2.src", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "proyecto-digi-t2.src.interfaz", "modulename": "proyecto-digi-t2.src.interfaz", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "proyecto-digi-t2.src.interfaz.consola", "modulename": "proyecto-digi-t2.src.interfaz.consola", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "proyecto-digi-t2.src.interfaz.consola.mostrar_menu_principal", "modulename": "proyecto-digi-t2.src.interfaz.consola", "qualname": "mostrar_menu_principal", "kind": "function", "doc": "<p>Muestra el men\u00fa principal de la aplicaci\u00f3n.</p>\n\n<p>Este men\u00fa incluye opciones para que los usuarios inicien sesi\u00f3n como jefes,\nempleados o salgan de la aplicaci\u00f3n.</p>\n\n<h2 id=\"parametros\">Par\u00e1metros:</h2>\n\n<p>logo : str\n    Logo que se muestra en la parte superior del men\u00fa principal.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">logo</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "proyecto-digi-t2.src.interfaz.consola.mostrar_menu_master", "modulename": "proyecto-digi-t2.src.interfaz.consola", "qualname": "mostrar_menu_master", "kind": "function", "doc": "<p>Muestra el men\u00fa de los jefes.</p>\n\n<p>Este men\u00fa presenta varias funcionalidades que solo pueden ser accedidas por\nlos jefes, tales como la creaci\u00f3n de grupos de tareas y la gesti\u00f3n de empleados.</p>\n\n<h2 id=\"parametros\">Par\u00e1metros:</h2>\n\n<p>nombre : str\n    Nombre del jefe que se muestra en el men\u00fa.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">nombre</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "proyecto-digi-t2.src.interfaz.consola.mostrar_menu_empleados", "modulename": "proyecto-digi-t2.src.interfaz.consola", "qualname": "mostrar_menu_empleados", "kind": "function", "doc": "<p>Muestra el men\u00fa de los empleados.</p>\n\n<p>Este men\u00fa permite a los empleados comprobar tareas, marcarlas como completadas\no visitar la tienda de puntos.</p>\n\n<h2 id=\"parametros\">Par\u00e1metros:</h2>\n\n<p>nombre : str\n    Nombre del empleado que se muestra en el men\u00fa.\nxp : int\n    Experiencia del empleado que se muestra en el men\u00fa.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">nombre</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">xp</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "proyecto-digi-t2.src.interfaz.consola.mensaje_carga_datos", "modulename": "proyecto-digi-t2.src.interfaz.consola", "qualname": "mensaje_carga_datos", "kind": "function", "doc": "<p>Simula el proceso de carga de datos, mostrando una serie de mensajes en consola\ncon pausas entre cada uno para simular la comprobaci\u00f3n y acceso a datos.</p>\n\n<h2 id=\"descripcion\">Descripci\u00f3n:</h2>\n\n<p>Se muestran los siguientes mensajes con pausas simuladas:</p>\n\n<ul>\n<li>\"Comprobando datos...\"</li>\n<li>\"Datos correctos...\"</li>\n<li>\"Accediendo...\"\nCada mensaje tiene una pausa de duraci\u00f3n espec\u00edfica (pausar_programa(2) o pausar_programa(3)).\nAl final, se limpia la consola.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "proyecto-digi-t2.src.interfaz.interface_strings", "modulename": "proyecto-digi-t2.src.interfaz.interface_strings", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "proyecto-digi-t2.src.interfaz.interface_strings.STRING_GLOBAL_OPCION", "modulename": "proyecto-digi-t2.src.interfaz.interface_strings", "qualname": "STRING_GLOBAL_OPCION", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;Por favor, seleccione una opci\u00f3n &gt;&gt; &#x27;"}, {"fullname": "proyecto-digi-t2.src.interfaz.interface_strings.STRING_ERROR", "modulename": "proyecto-digi-t2.src.interfaz.interface_strings", "qualname": "STRING_ERROR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;*ERROR* &gt;&gt; &#x27;"}, {"fullname": "proyecto-digi-t2.src.interfaz.interface_strings.STRING_EXIT", "modulename": "proyecto-digi-t2.src.interfaz.interface_strings", "qualname": "STRING_EXIT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;Saliendo del programa...&#x27;"}, {"fullname": "proyecto-digi-t2.src.interfaz.interface_strings.STRING_ASK_NAME", "modulename": "proyecto-digi-t2.src.interfaz.interface_strings", "qualname": "STRING_ASK_NAME", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;Introduce un nombre &gt;&gt; &#x27;"}, {"fullname": "proyecto-digi-t2.src.interfaz.interface_strings.STRING_PAUSA", "modulename": "proyecto-digi-t2.src.interfaz.interface_strings", "qualname": "STRING_PAUSA", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;Presione una tecla para continuar...&#x27;"}, {"fullname": "proyecto-digi-t2.src.interfaz.interface_strings.COMPLETE_1", "modulename": "proyecto-digi-t2.src.interfaz.interface_strings", "qualname": "COMPLETE_1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\u25b0\u25b1\u25b1\u25b1&#x27;"}, {"fullname": "proyecto-digi-t2.src.interfaz.interface_strings.COMPLETE_2", "modulename": "proyecto-digi-t2.src.interfaz.interface_strings", "qualname": "COMPLETE_2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\u25b0\u25b0\u25b1\u25b1&#x27;"}, {"fullname": "proyecto-digi-t2.src.interfaz.interface_strings.COMPLETE_3", "modulename": "proyecto-digi-t2.src.interfaz.interface_strings", "qualname": "COMPLETE_3", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\u25b0\u25b0\u25b0\u25b1&#x27;"}, {"fullname": "proyecto-digi-t2.src.interfaz.interface_strings.COMPLETE_4", "modulename": "proyecto-digi-t2.src.interfaz.interface_strings", "qualname": "COMPLETE_4", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\u25b0\u25b0\u25b0\u25b0&#x27;"}, {"fullname": "proyecto-digi-t2.src.interfaz.interface_strings.LOGO", "modulename": "proyecto-digi-t2.src.interfaz.interface_strings", "qualname": "LOGO", "kind": "variable", "doc": "<p></p>\n", "default_value": "&quot;\\n      _       _      ___                  _   _ \\n     (_) ___ | |__  / _ \\\\ _   _  ___  ___| |_| |\\n     | |/ _ \\\\| &#x27;_ \\\\| | | | | | |/ _ \\\\/ __| __| |\\n     | | (_) | |_) | |_| | |_| |  __/\\\\__ \\\\ |_|_|\\n   ,/  |\\\\___/|_.__/ \\\\__\\\\_\\\\__,_|\\\\___||___/\\\\__/(_)\\n   |__/                                         &quot;"}, {"fullname": "proyecto-digi-t2.src.interfaz.interface_strings.MENU_1_JEFE_1", "modulename": "proyecto-digi-t2.src.interfaz.interface_strings", "qualname": "MENU_1_JEFE_1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;Perfecto! introduce el nombre del empleado &gt;&gt; &#x27;"}, {"fullname": "proyecto-digi-t2.src.interfaz.interface_strings.MENU_1_JEFE_2", "modulename": "proyecto-digi-t2.src.interfaz.interface_strings", "qualname": "MENU_1_JEFE_2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;Introduce su UID &gt;&gt; &#x27;"}, {"fullname": "proyecto-digi-t2.src.interfaz.interface_strings.MENU_1_JEFE_3", "modulename": "proyecto-digi-t2.src.interfaz.interface_strings", "qualname": "MENU_1_JEFE_3", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;Accediendo a las misiones de &#x27;"}, {"fullname": "proyecto-digi-t2.src.interfaz.interface_strings.MENU_1_JEFE_4", "modulename": "proyecto-digi-t2.src.interfaz.interface_strings", "qualname": "MENU_1_JEFE_4", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;Introduce la ID de las misiones a comprobar &gt;&gt; &#x27;"}, {"fullname": "proyecto-digi-t2.src.interfaz.interface_strings.MENU_1_JEFE_5", "modulename": "proyecto-digi-t2.src.interfaz.interface_strings", "qualname": "MENU_1_JEFE_5", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;Cargando a las misiones con ID &#x27;"}, {"fullname": "proyecto-digi-t2.src.interfaz.interface_strings.MENU_1_JEFE_6", "modulename": "proyecto-digi-t2.src.interfaz.interface_strings", "qualname": "MENU_1_JEFE_6", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;Verifique que el usuario ha completado satisfactoriamente las misionesque ha marcado.&#x27;"}, {"fullname": "proyecto-digi-t2.src.interfaz.interface_strings.MENU_1_JEFE_7", "modulename": "proyecto-digi-t2.src.interfaz.interface_strings", "qualname": "MENU_1_JEFE_7", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\u00bfDesea a\u00f1adir XP al empleado por las misiones realizadas? S/N.&#x27;"}, {"fullname": "proyecto-digi-t2.src.interfaz.interface_strings.MENU_1_JEFE_8", "modulename": "proyecto-digi-t2.src.interfaz.interface_strings", "qualname": "MENU_1_JEFE_8", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;La XP ha sido agregada al empleado satisfactoriamente.&#x27;"}, {"fullname": "proyecto-digi-t2.src.interfaz.interface_strings.MENU_1_JEFE_9", "modulename": "proyecto-digi-t2.src.interfaz.interface_strings", "qualname": "MENU_1_JEFE_9", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\u00bfDesea borrar este archivo de misiones? S/N.&#x27;"}, {"fullname": "proyecto-digi-t2.src.interfaz.interface_strings.MENU_2_JEFE_1", "modulename": "proyecto-digi-t2.src.interfaz.interface_strings", "qualname": "MENU_2_JEFE_1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;Perfecto! Empecemos a construir... (introduzca x en cualquier momento para salir)&#x27;"}, {"fullname": "proyecto-digi-t2.src.interfaz.interface_strings.MENU_2_JEFE_2", "modulename": "proyecto-digi-t2.src.interfaz.interface_strings", "qualname": "MENU_2_JEFE_2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\u00bfPara qu\u00e9 empleado desea crear las misiones? &gt;&gt; &#x27;"}, {"fullname": "proyecto-digi-t2.src.interfaz.interface_strings.MENU_2_JEFE_3", "modulename": "proyecto-digi-t2.src.interfaz.interface_strings", "qualname": "MENU_2_JEFE_3", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\u00bfCuantas misiones principales desea agregar? &gt;&gt; &#x27;"}, {"fullname": "proyecto-digi-t2.src.interfaz.interface_strings.MENU_2_JEFE_4", "modulename": "proyecto-digi-t2.src.interfaz.interface_strings", "qualname": "MENU_2_JEFE_4", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\u00bfY secundarias? &gt;&gt; &#x27;"}, {"fullname": "proyecto-digi-t2.src.interfaz.interface_strings.MENU_2_JEFE_5", "modulename": "proyecto-digi-t2.src.interfaz.interface_strings", "qualname": "MENU_2_JEFE_5", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;Introduzca la descripci\u00f3n de la tarea &gt;&gt; &#x27;"}, {"fullname": "proyecto-digi-t2.src.interfaz.interface_strings.MENU_2_JEFE_6", "modulename": "proyecto-digi-t2.src.interfaz.interface_strings", "qualname": "MENU_2_JEFE_6", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;Introduzca la cantidad de experiencia a ganar con la tarea &gt;&gt; &#x27;"}, {"fullname": "proyecto-digi-t2.src.interfaz.interface_strings.MENU_2_JEFE_7", "modulename": "proyecto-digi-t2.src.interfaz.interface_strings", "qualname": "MENU_2_JEFE_7", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;Generando lista de misiones...&#x27;"}, {"fullname": "proyecto-digi-t2.src.interfaz.interface_strings.MENU_2_JEFE_8", "modulename": "proyecto-digi-t2.src.interfaz.interface_strings", "qualname": "MENU_2_JEFE_8", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\u00bfEst\u00e1s conforme con las misiones? S/N &gt;&gt; &#x27;"}, {"fullname": "proyecto-digi-t2.src.interfaz.interface_strings.MENU_2_JEFE_9", "modulename": "proyecto-digi-t2.src.interfaz.interface_strings", "qualname": "MENU_2_JEFE_9", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;Misiones generadas satisfactoriamente&#x27;"}, {"fullname": "proyecto-digi-t2.src.sistema", "modulename": "proyecto-digi-t2.src.sistema", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "proyecto-digi-t2.src.sistema.empleados", "modulename": "proyecto-digi-t2.src.sistema.empleados", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "proyecto-digi-t2.src.sistema.empleados.data_path", "modulename": "proyecto-digi-t2.src.sistema.empleados", "qualname": "data_path", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;data/empleados&#x27;"}, {"fullname": "proyecto-digi-t2.src.sistema.empleados.empleado_menu", "modulename": "proyecto-digi-t2.src.sistema.empleados", "qualname": "empleado_menu", "kind": "function", "doc": "<p>Muestra el men\u00fa de opciones para el empleado y permite realizar varias acciones relacionadas con las misiones y recompensas.</p>\n\n<p>El flujo de la funci\u00f3n es el siguiente:</p>\n\n<ol>\n<li>Solicita al empleado su ID de empleado.</li>\n<li>Si el ID no corresponde a un empleado v\u00e1lido, muestra un mensaje de error.</li>\n<li>Si el empleado es v\u00e1lido, se muestra un men\u00fa con las siguientes opciones:\n<ul>\n<li>Opci\u00f3n 1: Ver las misiones disponibles.</li>\n<li>Opci\u00f3n 2: Completar las misiones disponibles.</li>\n<li>Opci\u00f3n 3: Canjear XP por recompensas.</li>\n<li>Opci\u00f3n 4: Salir de la aplicaci\u00f3n.</li>\n</ul></li>\n<li>Si se selecciona una opci\u00f3n inv\u00e1lida, se muestra un mensaje de error y se vuelve a mostrar el men\u00fa.</li>\n</ol>\n\n<h2 id=\"parametros\">Par\u00e1metros:</h2>\n\n<p>No recibe par\u00e1metros externos.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "proyecto-digi-t2.src.sistema.empleados.ver_misiones", "modulename": "proyecto-digi-t2.src.sistema.empleados", "qualname": "ver_misiones", "kind": "function", "doc": "<p>Muestra las misiones disponibles para un empleado, tanto principales como secundarias.</p>\n\n<p>Para cada grupo de misiones, se muestra la descripci\u00f3n de cada misi\u00f3n y su estado (completada o no),\njunto con la cantidad de XP que se puede ganar.</p>\n\n<h2 id=\"parametros\">Par\u00e1metros:</h2>\n\n<p>worker_id : str\n    ID del empleado que busca las misiones disponibles.</p>\n\n<h2 id=\"descripcion\">Descripci\u00f3n:</h2>\n\n<p>Recorre los archivos de tareas asociados al empleado, carga las misiones y las muestra en la consola.\nSi no hay misiones disponibles, se muestra un mensaje indic\u00e1ndolo.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">worker_id</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "proyecto-digi-t2.src.sistema.empleados.completar_misiones", "modulename": "proyecto-digi-t2.src.sistema.empleados", "qualname": "completar_misiones", "kind": "function", "doc": "<p>Marca todas las misiones de un grupo como completadas para un empleado.</p>\n\n<p>Esta funci\u00f3n permite al empleado completar todas las misiones (principales y secundarias) de un grupo espec\u00edfico\nal seleccionar el grupo de misiones por su ID. </p>\n\n<h2 id=\"parametros\">Par\u00e1metros:</h2>\n\n<p>worker_id : str\n    ID del empleado que desea completar las misiones.</p>\n\n<h2 id=\"descripcion\">Descripci\u00f3n:</h2>\n\n<p>Se selecciona un grupo de misiones, se marcan todas las misiones como completadas y se actualizan los archivos\ncorrespondientes con el nuevo estado de las misiones.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">worker_id</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "proyecto-digi-t2.src.sistema.empleados.canjear_xp", "modulename": "proyecto-digi-t2.src.sistema.empleados", "qualname": "canjear_xp", "kind": "function", "doc": "<p>Permite a un empleado canjear su XP acumulado por recompensas disponibles.</p>\n\n<p>El empleado puede elegir entre varias recompensas (D\u00eda libre, Cena, Viaje) si tiene suficiente XP.</p>\n\n<h2 id=\"parametros\">Par\u00e1metros:</h2>\n\n<p>worker_id : str\n    ID del empleado que desea canjear su XP.</p>\n\n<h2 id=\"descripcion\">Descripci\u00f3n:</h2>\n\n<p>Muestra una lista de recompensas y sus costos en XP. Si el empleado tiene suficiente XP, se realiza el canje,\nde lo contrario, se muestra un mensaje de error.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">worker_id</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "proyecto-digi-t2.src.sistema.gestion_json", "modulename": "proyecto-digi-t2.src.sistema.gestion_json", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "proyecto-digi-t2.src.sistema.gestion_json.data_path", "modulename": "proyecto-digi-t2.src.sistema.gestion_json", "qualname": "data_path", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;data/empleados.json&#x27;"}, {"fullname": "proyecto-digi-t2.src.sistema.gestion_json.cargar_json", "modulename": "proyecto-digi-t2.src.sistema.gestion_json", "qualname": "cargar_json", "kind": "function", "doc": "<p>Carga datos desde un archivo JSON.</p>\n\n<p>Esta funci\u00f3n lee el archivo <code>empleados.json</code> desde la ruta especificada en <code>data_path</code>.\nSi el archivo existe, carga los datos JSON en un diccionario y los retorna. Si el archivo no\nexiste, retorna un diccionario vac\u00edo.</p>\n\n<h2 id=\"retorna\">Retorna:</h2>\n\n<p>dict\n    Diccionario con los datos cargados del archivo JSON, o un diccionario vac\u00edo si el archivo no existe.</p>\n\n<h2 id=\"ejemplo-de-uso\">Ejemplo de uso:</h2>\n\n<p>datos = cargar_json()</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "proyecto-digi-t2.src.sistema.gestion_json.guardar_json", "modulename": "proyecto-digi-t2.src.sistema.gestion_json", "qualname": "guardar_json", "kind": "function", "doc": "<p>Guarda datos en un archivo JSON.</p>\n\n<p>Esta funci\u00f3n toma un diccionario <code>datos</code> y lo guarda en el archivo <code>empleados.json</code> en la ruta especificada en <code>data_path</code>.\nSi el archivo no existe, se crea. Los datos son guardados con indentaci\u00f3n para mejorar la legibilidad.</p>\n\n<h2 id=\"parametros\">Par\u00e1metros:</h2>\n\n<p>datos : dict\n    Diccionario con los datos a guardar en el archivo JSON.</p>\n\n<h2 id=\"ejemplo-de-uso\">Ejemplo de uso:</h2>\n\n<p>datos = {\"empleado1\": {\"nombre\": \"Juan\", \"xp\": 100}}\nguardar_json(datos)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">datos</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "proyecto-digi-t2.src.sistema.gestion_json.asegurar_directorio", "modulename": "proyecto-digi-t2.src.sistema.gestion_json", "qualname": "asegurar_directorio", "kind": "function", "doc": "<p>Asegura que un directorio exista.</p>\n\n<p>Esta funci\u00f3n verifica si el directorio especificado por <code>ruta</code> existe. Si no existe, crea el directorio\ny todos los directorios intermedios necesarios.</p>\n\n<h2 id=\"parametros\">Par\u00e1metros:</h2>\n\n<p>ruta : str\n    Ruta del directorio que se quiere verificar o crear.</p>\n\n<h2 id=\"ejemplo-de-uso\">Ejemplo de uso:</h2>\n\n<p>asegurar_directorio(\"data/empleados\")</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ruta</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "proyecto-digi-t2.src.sistema.jefes", "modulename": "proyecto-digi-t2.src.sistema.jefes", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "proyecto-digi-t2.src.sistema.jefes.data_path", "modulename": "proyecto-digi-t2.src.sistema.jefes", "qualname": "data_path", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;data/empleados&#x27;"}, {"fullname": "proyecto-digi-t2.src.sistema.jefes.agregar_empleado", "modulename": "proyecto-digi-t2.src.sistema.jefes", "qualname": "agregar_empleado", "kind": "function", "doc": "<p>Agrega un nuevo empleado al sistema.</p>\n\n<p>Esta funci\u00f3n solicita al usuario el ID y el nombre del empleado, y crea una carpeta para el empleado en la ruta\nespecificada en <code>data_path</code>. Luego, guarda la informaci\u00f3n del empleado en un archivo JSON dentro de la carpeta\ndel empleado. El empleado es inicializado con 0 puntos de experiencia (XP).</p>\n\n<h2 id=\"ejemplo-de-uso\">Ejemplo de uso:</h2>\n\n<p>agregar_empleado()</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "proyecto-digi-t2.src.sistema.jefes.crear_grupo_tareas", "modulename": "proyecto-digi-t2.src.sistema.jefes", "qualname": "crear_grupo_tareas", "kind": "function", "doc": "<p>Crea un grupo de misiones para un empleado.</p>\n\n<p>Esta funci\u00f3n solicita al usuario el ID de un empleado, verifica si el empleado existe, y luego permite\nal usuario crear un nuevo grupo de misiones. El grupo de misiones tiene misiones principales y secundarias\nque el usuario puede definir con una descripci\u00f3n y puntos de experiencia (XP). El grupo de misiones es guardado\nen un archivo JSON dentro de la carpeta del empleado.</p>\n\n<h2 id=\"ejemplo-de-uso\">Ejemplo de uso:</h2>\n\n<p>crear_grupo_tareas()</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "proyecto-digi-t2.src.sistema.jefes.gestionar_tareas", "modulename": "proyecto-digi-t2.src.sistema.jefes", "qualname": "gestionar_tareas", "kind": "function", "doc": "<p>Gestiona las misiones de un empleado.</p>\n\n<p>Esta funci\u00f3n permite al jefe gestionar las misiones de un empleado. Solicita el ID del empleado y, si el empleado\nexiste, presenta los grupos de misiones asignados. Luego, el jefe puede marcar misiones como completadas y\nasignar puntos de experiencia (XP) al empleado. Tambi\u00e9n puede eliminar misiones completadas del grupo.</p>\n\n<h2 id=\"ejemplo-de-uso\">Ejemplo de uso:</h2>\n\n<p>gestionar_tareas()</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "proyecto-digi-t2.src.tareas", "modulename": "proyecto-digi-t2.src.tareas", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "proyecto-digi-t2.src.tareas.tareas", "modulename": "proyecto-digi-t2.src.tareas.tareas", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "proyecto-digi-t2.src.tareas.tareas.ARCHIVO_TAREAS", "modulename": "proyecto-digi-t2.src.tareas.tareas", "qualname": "ARCHIVO_TAREAS", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;data/nombre_empleado/tareas.json&#x27;"}, {"fullname": "proyecto-digi-t2.src.tareas.tareas.obtener_tareas", "modulename": "proyecto-digi-t2.src.tareas.tareas", "qualname": "obtener_tareas", "kind": "function", "doc": "<p>Carga y retorna las tareas desde el archivo JSON.</p>\n\n<p>Retorna:\n    dict: Tareas cargadas del archivo o un diccionario vac\u00edo si no existen.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "proyecto-digi-t2.src.tareas.tareas.agregar_tarea", "modulename": "proyecto-digi-t2.src.tareas.tareas", "qualname": "agregar_tarea", "kind": "function", "doc": "<p>Agrega una nueva tarea al archivo JSON de tareas.</p>\n\n<p>Par\u00e1metros:\n    nombre (str): Nombre de la tarea.\n    descripcion (str): Descripci\u00f3n de la tarea.\n    xp (int): Recompensa en XP.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">nombre</span>, </span><span class=\"param\"><span class=\"n\">descripcion</span>, </span><span class=\"param\"><span class=\"n\">xp</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "proyecto-digi-t2.src.tareas.tareas.completar_tarea", "modulename": "proyecto-digi-t2.src.tareas.tareas", "qualname": "completar_tarea", "kind": "function", "doc": "<p>Marca una tarea como completada en el archivo JSON.</p>\n\n<p>Par\u00e1metros:\n    nombre (str): Nombre de la tarea a completar.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">nombre</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "proyecto-digi-t2.src.tareas.tareas.mostrar_tareas", "modulename": "proyecto-digi-t2.src.tareas.tareas", "qualname": "mostrar_tareas", "kind": "function", "doc": "<p>Muestra todas las tareas con su estado y recompensa en XP.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "proyecto-digi-t2.src.utils", "modulename": "proyecto-digi-t2.src.utils", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "proyecto-digi-t2.src.utils.utils", "modulename": "proyecto-digi-t2.src.utils.utils", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "proyecto-digi-t2.src.utils.utils.limpiar_consola", "modulename": "proyecto-digi-t2.src.utils.utils", "qualname": "limpiar_consola", "kind": "function", "doc": "<p>Limpia la consola dependiendo del sistema operativo.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "proyecto-digi-t2.src.utils.utils.pedir_numero", "modulename": "proyecto-digi-t2.src.utils.utils", "qualname": "pedir_numero", "kind": "function", "doc": "<p>Pide al usuario un n\u00famero v\u00e1lido.</p>\n\n<p>Par\u00e1metros:\n    msj (str): El mensaje para solicitar el n\u00famero.</p>\n\n<p>Retorna:\n    int: El n\u00famero ingresado por el usuario.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">msj</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "proyecto-digi-t2.src.utils.utils.validar_numero", "modulename": "proyecto-digi-t2.src.utils.utils", "qualname": "validar_numero", "kind": "function", "doc": "<p>Valida si una cadena representa un n\u00famero entero v\u00e1lido.</p>\n\n<p>Par\u00e1metros:\n    num (str): La cadena a validar.</p>\n\n<p>Retorna:\n    bool: True si la cadena es un n\u00famero v\u00e1lido, False en caso contrario.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">num</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "proyecto-digi-t2.src.utils.utils.pausar_programa", "modulename": "proyecto-digi-t2.src.utils.utils", "qualname": "pausar_programa", "kind": "function", "doc": "<p>Pausa el programa por un tiempo determinado o hasta que el usuario presione una tecla.</p>\n\n<p>Par\u00e1metros:\n    tiempo (int): El tiempo a pausar el programa en segundos (por defecto 5).\n    pausa (bool): Si es True, pausa hasta que el usuario presione una tecla (por defecto False).</p>\n\n<p>Retorna:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tiempo</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>, </span><span class=\"param\"><span class=\"n\">pausa</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "proyecto-digi-t2.src.utils.utils.colorear_texto", "modulename": "proyecto-digi-t2.src.utils.utils", "qualname": "colorear_texto", "kind": "function", "doc": "<p>Colorea un mensaje con el color indicado.</p>\n\n<p>Par\u00e1metros:\n    msj (str): El mensaje a colorear.\n    color (str): El color para el texto (e.g., 'rojo', 'azul').</p>\n\n<p>Retorna:\n    str: El mensaje con el color aplicado.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">msj</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">color</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();